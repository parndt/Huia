#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Huia
  class Parser < Racc::Parser

module_eval(<<'...end parser.y.rb/module_eval...', 'parser.y.rb', 66)

attr_accessor :lexer, :state

def initialize lexer
  self.lexer  = lexer
  self.state  = []
end

def ast
  do_parse
end

def next_token
  nt = lexer.next_token
  # just use a state stack for now, we'll have to do something
  # more sophisticated soon.
  if nt && nt.first == :state
    if nt.last
      state.push << nt.last
    else
      state.pop
    end
    next_token
  else
    nt
  end
end

def node type, *args
  Huia::AST.const_get(type).new(*args)
end
alias n node
...end parser.y.rb/module_eval...
##### State transition tables begin ###

racc_action_table = [
    10,    33,    46,    10,    34,    31,    31,    23,    24,    25,
    23,    24,    25,     9,    10,    31,     9,    22,    47,    47,
    22,    23,    24,    25,    26,    10,    36,     9,    10,   nil,
   nil,    22,    23,    24,    25,    23,    24,    25,     9,    10,
   nil,     9,    22,   nil,   nil,    22,    23,    24,    25,   nil,
    10,   nil,     9,    10,   nil,   nil,    22,    23,    24,    25,
    23,    24,    25,     9,    10,   nil,     9,    22,   nil,   nil,
    22,    23,    24,    25,   nil,    10,   nil,     9,   nil,   nil,
   nil,    22,    23,    24,    25,    29,    30,   nil,     9,   nil,
   nil,    31,    22,    27,    28,    29,    30,   nil,   nil,    32,
   nil,    31,    27,    28,    29,    30,   nil,   nil,   nil,    32,
    31,    29,    30,   nil,    50,   nil,   nil,    31,    32,    27,
    28,    29,    30,   nil,   nil,    32,   nil,    31,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    32 ]

racc_action_check = [
     0,     3,    33,    47,     7,    39,    40,     0,     0,     0,
    47,    47,    47,     0,    34,    42,    47,     0,    33,    44,
    47,    34,    34,    34,     1,    29,    26,    34,    31,   nil,
   nil,    34,    29,    29,    29,    31,    31,    31,    29,     9,
   nil,    31,    29,   nil,   nil,    31,     9,     9,     9,   nil,
    30,   nil,     9,    27,   nil,   nil,     9,    30,    30,    30,
    27,    27,    27,    30,    28,   nil,    27,    30,   nil,   nil,
    27,    28,    28,    28,   nil,    32,   nil,    28,   nil,   nil,
   nil,    28,    32,    32,    32,    37,    37,   nil,    32,   nil,
   nil,    37,    32,    49,    49,    49,    49,   nil,   nil,    37,
   nil,    49,    35,    35,    35,    35,   nil,   nil,   nil,    49,
    35,    38,    38,   nil,    35,   nil,   nil,    38,    35,     2,
     2,     2,     2,   nil,   nil,    38,   nil,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2 ]

racc_action_pointer = [
    -2,    24,   115,   -16,   nil,   nil,   nil,     1,   nil,    37,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    26,    51,    62,    23,
    48,    26,    73,     0,    12,    98,   nil,    79,   105,    -7,
    -6,   nil,     3,   nil,     1,   nil,   nil,     1,   nil,    89,
   nil,   nil,   nil,   nil ]

racc_action_default = [
    -2,   -40,    -1,    -3,    -4,    -5,    -6,    -7,    -8,   -40,
   -17,   -18,   -19,   -20,   -21,   -22,   -23,   -24,   -32,   -33,
   -34,   -35,   -36,   -37,   -38,   -39,   -40,   -40,   -40,   -40,
   -40,   -40,   -40,   -40,   -40,   -40,    54,   -26,   -27,   -28,
   -29,   -30,   -31,    -9,   -10,   -11,   -12,   -40,   -14,   -25,
   -16,   -15,    -7,   -13 ]

racc_goto_table = [
     2,    48,    43,    52,    53,    44,    45,     1,   nil,    35,
   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,    39,
    40,    41,    42,   nil,    49 ]

racc_goto_check = [
     2,    12,     9,     7,     3,    10,    11,     1,   nil,     2,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,     2,     2,
     2,     2,     2,   nil,     2 ]

racc_goto_pointer = [
   nil,     7,     0,   -43,   nil,   nil,   nil,   -44,   nil,   -31,
   -28,   -27,   -32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,   nil,
   nil,   nil,   nil,    11,    12,    13,    14,    15,    16,    17,
    18,    19,    20,    21 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 22, :_reduce_none,
  0, 22, :_reduce_none,
  1, 23, :_reduce_none,
  1, 23, :_reduce_none,
  1, 23, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  3, 26, :_reduce_9,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 32, :_reduce_12,
  2, 33, :_reduce_13,
  1, 31, :_reduce_none,
  2, 31, :_reduce_15,
  3, 29, :_reduce_16,
  1, 28, :_reduce_17,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  3, 34, :_reduce_25,
  3, 35, :_reduce_26,
  3, 36, :_reduce_27,
  3, 37, :_reduce_28,
  3, 38, :_reduce_29,
  3, 39, :_reduce_30,
  3, 40, :_reduce_31,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 44, :_reduce_36,
  1, 42, :_reduce_37,
  1, 41, :_reduce_38,
  1, 43, :_reduce_39 ]

racc_reduce_n = 40

racc_shift_n = 54

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :EQUAL => 3,
  :PLUS => 4,
  :MINUS => 5,
  :ASTERISK => 6,
  :FWD_SLASH => 7,
  :COLON => 8,
  :FLOAT => 9,
  :INTEGER => 10,
  :STRING => 11,
  :EXPO => 12,
  :INDENT => 13,
  :OUTDENT => 14,
  :OPAREN => 15,
  :CPAREN => 16,
  :DOT => 17,
  :SIGNATURE => 18,
  :SYMBOL => 19,
  :PERCENT => 20 }

racc_nt_base = 21

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "EQUAL",
  "PLUS",
  "MINUS",
  "ASTERISK",
  "FWD_SLASH",
  "COLON",
  "FLOAT",
  "INTEGER",
  "STRING",
  "EXPO",
  "INDENT",
  "OUTDENT",
  "OPAREN",
  "CPAREN",
  "DOT",
  "SIGNATURE",
  "SYMBOL",
  "PERCENT",
  "$start",
  "statement",
  "expr",
  "callable",
  "binary_op",
  "method_call",
  "literal",
  "variable",
  "grouped_expr",
  "call_signature",
  "call_arguments",
  "simple_name",
  "call_argument",
  "assignment",
  "addition",
  "subtraction",
  "multiplication",
  "division",
  "exponentiation",
  "modulo",
  "integer",
  "float",
  "string",
  "symbol" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y.rb', 22)
  def _reduce_9(val, _values, result)
     return n :MethodCall, val[0], val[2] 
    result
  end
.,.,

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y.rb', 26)
  def _reduce_12(val, _values, result)
     return n :CallSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 27)
  def _reduce_13(val, _values, result)
     return n :CallSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y.rb', 29)
  def _reduce_15(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 32)
  def _reduce_16(val, _values, result)
     return n :Expression, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 34)
  def _reduce_17(val, _values, result)
     return n :Variable, val[0] 
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y.rb', 44)
  def _reduce_25(val, _values, result)
     return n :VarAssign, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 45)
  def _reduce_26(val, _values, result)
     return n :Addition, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 46)
  def _reduce_27(val, _values, result)
     return n :Subtraction, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 47)
  def _reduce_28(val, _values, result)
     return n :Multiplication, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 48)
  def _reduce_29(val, _values, result)
     return n :Division, val[0], val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 49)
  def _reduce_30(val, _values, result)
     return n :Exponentiation, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 50)
  def _reduce_31(val, _values, result)
     return n :Modulo, val[0], val[2] 
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y.rb', 57)
  def _reduce_36(val, _values, result)
     return n :Symbol,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 58)
  def _reduce_37(val, _values, result)
     return n :Float,   val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 59)
  def _reduce_38(val, _values, result)
     return n :Integer, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y.rb', 60)
  def _reduce_39(val, _values, result)
     return n :String,  val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Huia
