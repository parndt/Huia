#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Huia
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 84)

attr_accessor :lexer, :state, :scopes

def initialize lexer
  @lexer  = lexer
  @state  = []
  @scopes = []
  push_scope
end

def ast
  @ast ||= do_parse
  @scopes.first
end

def next_token
  nt = lexer.next_computed_token
  # just use a state stack for now, we'll have to do something
  # more sophisticated soon.
  if nt && nt.first == :state
    if nt.last
      state.push << nt.last
    else
      state.pop
    end
    next_token
  else
    nt
  end
end

def push_scope
  new_scope = Huia::AST::Scope.new scope
  scopes.push new_scope
  new_scope
end

def pop_scope
  scopes.pop
end

def scope
  scopes.last
end

def node type, *args
  Huia::AST.const_get(type).new(*args)
end
alias n node
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    31,    47,    15,    62,    36,    37,    38,    39,    40,    28,
    29,    30,    40,    40,    40,    14,    48,    48,    61,    27,
    13,    34,    35,    41,    36,    37,    38,    39,    51,    38,
    39,    15,    40,    43,    62,    40,    69,    36,    37,    38,
    39,    15,    43,    41,    15,    40,    41,    42,    28,    29,
    30,    28,    29,    30,    14,    65,    41,    14,    27,    13,
    15,    27,    13,    15,   nil,   nil,   nil,    28,    29,    30,
    28,    29,    30,    14,   nil,    83,    14,    27,    13,    15,
    27,    13,   nil,   nil,   nil,   nil,    28,    29,    30,   nil,
   nil,    81,    14,    15,   nil,   nil,    27,    13,   nil,   nil,
    28,    29,    30,   nil,   nil,    15,    14,   nil,    15,   nil,
    27,    13,    28,    29,    30,    28,    29,    30,    14,   nil,
    15,    14,    27,    13,   nil,    27,    13,    28,    29,    30,
   nil,   nil,    15,    14,   nil,    15,   nil,    27,    13,    28,
    29,    30,    28,    29,    30,    14,   nil,    15,    14,    27,
    13,   nil,    27,    13,    28,    29,    30,    38,    39,    15,
    14,   nil,   nil,    40,    27,    13,    28,    29,    30,   nil,
   nil,    81,    14,    15,    41,   nil,    27,    13,   nil,   nil,
    28,    29,    30,   nil,    72,   nil,    14,   nil,   nil,   nil,
    27 ]

racc_action_check = [
     1,    13,     1,    59,     3,     3,     3,     3,    55,     1,
     1,     1,     3,    57,    54,     1,    45,    13,    42,     1,
     1,     3,     3,     3,    50,    50,    50,    50,    31,    53,
    53,    48,    50,    68,    42,    53,    50,    64,    64,    64,
    64,    36,     9,    50,    65,    64,    53,     4,    36,    36,
    36,    65,    65,    65,    36,    44,    64,    65,    36,    36,
    14,    65,    65,    79,   nil,   nil,   nil,    14,    14,    14,
    79,    79,    79,    14,   nil,    79,    79,    14,    14,    75,
    79,    79,   nil,   nil,   nil,   nil,    75,    75,    75,   nil,
   nil,    75,    75,    37,   nil,   nil,    75,    75,   nil,   nil,
    37,    37,    37,   nil,   nil,    38,    37,   nil,    39,   nil,
    37,    37,    38,    38,    38,    39,    39,    39,    38,   nil,
    40,    39,    38,    38,   nil,    39,    39,    40,    40,    40,
   nil,   nil,    41,    40,   nil,     0,   nil,    40,    40,    41,
    41,    41,     0,     0,     0,    41,   nil,    43,     0,    41,
    41,   nil,     0,     0,    43,    43,    43,    52,    52,    80,
    43,   nil,   nil,    52,    43,    43,    80,    80,    80,   nil,
   nil,    80,    80,    62,    52,   nil,    80,    80,   nil,   nil,
    62,    62,    62,   nil,    62,   nil,    62,   nil,   nil,   nil,
    62 ]

racc_action_pointer = [
   133,     0,   nil,     0,    30,   nil,   nil,   nil,   nil,    39,
   nil,   nil,   nil,    -1,    58,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    28,   nil,   nil,   nil,   nil,    39,    91,   103,   106,
   118,   130,    16,   145,    42,    -2,   nil,   nil,    29,   nil,
    20,   nil,   151,    23,     2,    -4,   nil,     1,   nil,   -15,
   nil,   nil,   171,   nil,    33,    42,   nil,   nil,    30,   nil,
   nil,   nil,   nil,   nil,   nil,    77,   nil,   nil,   nil,    61,
   157,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -62,   -62,    -1,   -62,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -28,   -29,   -62,   -62,   -39,   -40,   -41,   -42,   -43,
   -44,   -45,   -46,   -54,   -55,   -56,   -57,   -58,   -59,   -60,
   -61,   -62,    -2,    -3,    -4,    -5,   -62,   -62,   -62,   -62,
   -62,   -62,   -62,   -62,   -30,   -32,   -33,   -34,   -62,   -36,
   -62,    85,   -48,   -49,   -50,   -51,   -52,   -53,   -19,   -20,
   -21,   -22,   -62,   -26,   -47,   -62,   -37,   -35,   -62,   -38,
   -27,   -11,   -13,   -15,   -16,   -62,   -23,   -24,   -25,   -62,
   -62,   -14,   -18,   -31,   -17 ]

racc_goto_table = [
    32,     1,    49,    50,    63,    68,    82,    74,    78,    73,
    75,    84,    58,    59,    60,    77,    76,    44,    45,    71,
    46,    70,    33,    67,   nil,    52,    53,    54,    55,    56,
    57,   nil,    64,   nil,    66,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    79,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    80,   nil,    32,    32 ]

racc_goto_check = [
     2,     1,    27,     3,    20,    10,    13,    16,    14,    15,
    12,    13,    17,    18,    19,     5,    21,    24,    25,    10,
    26,    20,     4,    28,   nil,     3,     3,     3,     3,     3,
     3,   nil,     3,   nil,    27,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,     2,     2 ]

racc_goto_pointer = [
   nil,     1,    -1,   -11,    19,   -47,   nil,   nil,   nil,   nil,
   -43,   nil,   -52,   -69,   -54,   -53,   -55,   -30,   -29,   -28,
   -38,   -46,   nil,   nil,     4,     5,     7,   -11,   -25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,   nil,     4,     5,     6,     7,     8,
     9,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    11,    12,   nil,   nil,   nil,   nil,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 25, :_reduce_none,
  2, 25, :_reduce_2,
  2, 26, :_reduce_3,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 36, :_reduce_13,
  1, 37, :_reduce_14,
  1, 38, :_reduce_none,
  1, 38, :_reduce_16,
  3, 39, :_reduce_17,
  2, 40, :_reduce_18,
  3, 31, :_reduce_19,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 43, :_reduce_22,
  2, 44, :_reduce_23,
  1, 45, :_reduce_none,
  1, 45, :_reduce_none,
  1, 42, :_reduce_none,
  2, 42, :_reduce_27,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  2, 46, :_reduce_none,
  5, 47, :_reduce_none,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 50, :_reduce_34,
  2, 51, :_reduce_35,
  1, 49, :_reduce_none,
  2, 49, :_reduce_37,
  3, 35, :_reduce_38,
  1, 34, :_reduce_39,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  3, 52, :_reduce_47,
  3, 53, :_reduce_48,
  3, 54, :_reduce_49,
  3, 55, :_reduce_50,
  3, 56, :_reduce_51,
  3, 57, :_reduce_52,
  3, 58, :_reduce_53,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 62, :_reduce_58,
  1, 60, :_reduce_59,
  1, 59, :_reduce_60,
  1, 61, :_reduce_61 ]

racc_reduce_n = 62

racc_shift_n = 85

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :EQUAL => 3,
  :PLUS => 4,
  :MINUS => 5,
  :ASTERISK => 6,
  :FWD_SLASH => 7,
  :COLON => 8,
  :FLOAT => 9,
  :INTEGER => 10,
  :STRING => 11,
  :EXPO => 12,
  :INDENT => 13,
  :OUTDENT => 14,
  :OPAREN => 15,
  :CPAREN => 16,
  :DOT => 17,
  :SIGNATURE => 18,
  :SYMBOL => 19,
  :DEF => 20,
  :NL => 21,
  :EOF => 22,
  :PERCENT => 23 }

racc_nt_base = 24

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "EQUAL",
  "PLUS",
  "MINUS",
  "ASTERISK",
  "FWD_SLASH",
  "COLON",
  "FLOAT",
  "INTEGER",
  "STRING",
  "EXPO",
  "INDENT",
  "OUTDENT",
  "OPAREN",
  "CPAREN",
  "DOT",
  "SIGNATURE",
  "SYMBOL",
  "DEF",
  "NL",
  "EOF",
  "PERCENT",
  "$start",
  "statements",
  "statement",
  "expr",
  "eol",
  "callable",
  "binary_op",
  "method_call",
  "def_method",
  "literal",
  "variable",
  "grouped_expr",
  "indent",
  "outdent",
  "closure",
  "closure_w_stmts",
  "closure_wo_stmts",
  "call_signature",
  "call_arguments",
  "call_simple_name",
  "call_argument",
  "call_passed_arg",
  "def_method_sans_block",
  "def_method_with_block",
  "def_method_sig",
  "def_method_arguments",
  "def_method_simple_name",
  "def_method_argument",
  "assignment",
  "addition",
  "subtraction",
  "multiplication",
  "division",
  "exponentiation",
  "modulo",
  "integer",
  "float",
  "string",
  "symbol" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_2(val, _values, result)
     return scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_3(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_13(val, _values, result)
     return push_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_14(val, _values, result)
     return pop_scope 
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_16(val, _values, result)
     return val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_17(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_18(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_19(val, _values, result)
     return n :MethodCall, val[0], val[2] 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_22(val, _values, result)
     return n :CallSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_23(val, _values, result)
     return n :CallSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_27(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_34(val, _values, result)
     return n :DefSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_35(val, _values, result)
     return n :DefSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_37(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_38(val, _values, result)
     return n :Expression, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_39(val, _values, result)
     return scope.allocate val[0] 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_47(val, _values, result)
     return n :VarAssign, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_48(val, _values, result)
     return n :Addition, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_49(val, _values, result)
     return n :Subtraction, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_50(val, _values, result)
     return n :Multiplication, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_51(val, _values, result)
     return n :Division, val[0], val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_52(val, _values, result)
     return n :Exponentiation, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_53(val, _values, result)
     return n :Modulo, val[0], val[2] 
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_58(val, _values, result)
     return n :Symbol,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_59(val, _values, result)
     return n :Float,   val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_60(val, _values, result)
     return n :Integer, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_61(val, _values, result)
     return n :String,  val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Huia
