#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Huia
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 92)

attr_accessor :lexer, :state, :scopes

def initialize lexer
  @lexer  = lexer
  @state  = []
  @scopes = []
  push_scope
end

def ast
  @ast ||= do_parse
  @scopes.first
end

def next_token
  nt = lexer.next_computed_token
  # just use a state stack for now, we'll have to do something
  # more sophisticated soon.
  if nt && nt.first == :state
    if nt.last
      state.push << nt.last
    else
      state.pop
    end
    next_token
  else
    nt
  end
end

def push_scope
  new_scope = Huia::AST::Scope.new scope
  scopes.push new_scope
  new_scope
end

def pop_scope
  scopes.pop
end

def scope
  scopes.last
end

def node type, *args
  Huia::AST.const_get(type).new(*args)
end
alias n node
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    61,    16,    39,    40,    41,    42,    43,    31,    32,    33,
    43,    55,    76,    18,    43,    41,    42,    30,    37,    38,
    54,    43,    44,    39,    40,    41,    42,    39,    40,    41,
    42,    43,    45,    44,    46,    43,    71,    83,    84,    37,
    38,    43,    61,    44,    34,    85,    15,    44,    39,    40,
    41,    42,    16,    31,    32,    33,    43,   -41,    86,    18,
    80,    61,    16,    30,    41,    42,    63,    15,    44,   nil,
    43,   -41,   nil,   nil,    31,    32,    33,   nil,    61,   nil,
    18,    15,    44,    16,    30,    31,    32,    33,    31,    32,
    33,    18,    15,   nil,    18,    30,   nil,    16,    30,    31,
    32,    33,   nil,    15,   nil,    18,   nil,   nil,    16,    30,
    31,    32,    33,   nil,    15,   nil,    18,   nil,   nil,    16,
    30,    31,    32,    33,   nil,    15,   nil,    18,   nil,   nil,
    16,    30,    31,    32,    33,   nil,    15,   nil,    18,   nil,
   nil,    16,    30,    31,    32,    33,   nil,    15,   nil,    18,
   nil,   nil,    16,    30,    31,    32,    33,   nil,    15,   nil,
    18,   nil,   nil,    16,    30,    31,    32,    33,   nil,    15,
   nil,    18,   nil,   nil,    16,    30,    31,    32,    33,   nil,
    15,    76,    18,   nil,   nil,    16,    30,    31,    32,    33,
   nil,   nil,    76,    18,   nil,   nil,    16,    30 ]

racc_action_check = [
    16,    13,    74,    74,    74,    74,    67,    16,    16,    16,
    74,    16,    74,    16,    69,    64,    64,    16,    74,    74,
    16,    64,    74,     3,     3,     3,     3,    72,    72,    72,
    72,     3,     4,    64,     8,    72,    45,    77,    77,     3,
     3,    66,    53,     3,     1,    79,     1,    72,    62,    62,
    62,    62,    45,     1,     1,     1,    62,    15,    83,     1,
    62,    84,     1,     1,    65,    65,    34,    46,    62,   nil,
    65,    15,   nil,   nil,    46,    46,    46,   nil,    85,   nil,
    46,    39,    65,    46,    46,    85,    85,    85,    39,    39,
    39,    85,    40,   nil,    39,    85,   nil,    39,    39,    40,
    40,    40,   nil,    41,   nil,    40,   nil,   nil,    40,    40,
    41,    41,    41,   nil,    42,   nil,    41,   nil,   nil,    41,
    41,    42,    42,    42,   nil,    43,   nil,    42,   nil,   nil,
    42,    42,    43,    43,    43,   nil,    44,   nil,    43,   nil,
   nil,    43,    43,    44,    44,    44,   nil,     0,   nil,    44,
   nil,   nil,    44,    44,     0,     0,     0,   nil,    18,   nil,
     0,   nil,   nil,     0,     0,    18,    18,    18,   nil,    52,
   nil,    18,   nil,   nil,    18,    18,    52,    52,    52,   nil,
    73,    52,    52,   nil,   nil,    52,    52,    73,    73,    73,
   nil,   nil,    73,    73,   nil,   nil,    73,    73 ]

racc_action_pointer = [
   145,    44,   nil,    19,    15,   nil,   nil,   nil,    31,   nil,
   nil,   nil,   nil,   -17,   nil,    54,    -2,   nil,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   nil,   nil,   nil,   nil,    79,
    90,   101,   112,   123,   134,    34,    65,   nil,   nil,   nil,
   nil,   nil,   167,    40,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    44,   nil,     9,    58,    29,    -6,   nil,     2,
   nil,   nil,    23,   178,    -2,   nil,   nil,    15,   nil,    42,
   nil,   nil,   nil,    45,    59,    76,   nil,   nil,   nil ]

racc_action_default = [
   -64,   -64,    -1,   -64,    -6,    -7,    -8,    -9,   -10,   -11,
   -28,   -29,   -31,   -32,   -33,   -34,   -64,   -38,   -64,   -42,
   -43,   -44,   -45,   -46,   -47,   -48,   -56,   -57,   -58,   -59,
   -60,   -61,   -62,   -63,   -64,    -2,    -3,    -4,    -5,   -64,
   -64,   -64,   -64,   -64,   -64,   -64,   -64,   -39,   -10,   -12,
   -13,   -14,   -64,   -64,   -20,   -21,   -22,   -23,   -35,   -36,
   -37,   -41,   -64,    89,   -50,   -51,   -52,   -53,   -54,   -55,
   -30,   -34,   -49,   -64,   -64,   -17,   -18,   -64,   -24,   -26,
   -40,   -15,   -16,   -64,   -64,   -64,   -19,   -25,   -27 ]

racc_goto_table = [
    35,    60,     1,    62,    78,    48,    52,    51,    50,    49,
    56,    75,    53,    77,    57,    59,    70,    47,    58,   nil,
   nil,   nil,   nil,   nil,    64,    65,    66,    67,    68,    69,
   nil,    72,    81,    82,   nil,    87,   nil,    74,   nil,   nil,
   nil,   nil,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    73,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    88,   nil,    35,    79,    48 ]

racc_goto_check = [
     2,     5,     1,     3,    21,     9,    15,    14,    13,    12,
    17,    16,    18,    19,    20,    11,    24,    27,    28,   nil,
   nil,   nil,   nil,   nil,     3,     3,     3,     3,     3,     3,
   nil,     3,    16,    16,   nil,    21,   nil,     3,   nil,   nil,
   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,   nil,     2,     9,     9 ]

racc_goto_pointer = [
   nil,     2,    -1,   -15,   nil,   -15,   nil,   nil,   nil,   -11,
   nil,    -1,    -7,    -8,    -9,   -10,   -41,    -6,    -4,   -40,
    -2,   -49,   nil,   nil,   -29,   nil,   nil,     4,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,    36,     4,     5,     6,     7,     8,
     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,    11,    12,    13,    14,    17,   nil,    19,
    20,    21,    22,    23,    24,    25,    26,    27,    28,    29 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 26, :_reduce_none,
  2, 26, :_reduce_2,
  2, 27, :_reduce_3,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 37, :_reduce_15,
  3, 38, :_reduce_16,
  2, 39, :_reduce_17,
  1, 41, :_reduce_18,
  4, 42, :_reduce_19,
  1, 43, :_reduce_20,
  1, 45, :_reduce_21,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 44, :_reduce_none,
  3, 44, :_reduce_none,
  1, 46, :_reduce_26,
  3, 46, :_reduce_27,
  1, 32, :_reduce_none,
  1, 32, :_reduce_none,
  3, 47, :_reduce_30,
  1, 48, :_reduce_31,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 51, :_reduce_34,
  2, 52, :_reduce_35,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 50, :_reduce_none,
  2, 50, :_reduce_39,
  3, 35, :_reduce_40,
  1, 34, :_reduce_41,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 54, :_reduce_49,
  3, 55, :_reduce_50,
  3, 56, :_reduce_51,
  3, 57, :_reduce_52,
  3, 58, :_reduce_53,
  3, 59, :_reduce_54,
  3, 60, :_reduce_55,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 64, :_reduce_60,
  1, 62, :_reduce_61,
  1, 61, :_reduce_62,
  1, 63, :_reduce_63 ]

racc_reduce_n = 64

racc_shift_n = 89

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :EQUAL => 3,
  :PLUS => 4,
  :MINUS => 5,
  :ASTERISK => 6,
  :FWD_SLASH => 7,
  :COLON => 8,
  :FLOAT => 9,
  :INTEGER => 10,
  :STRING => 11,
  :EXPO => 12,
  :INDENT => 13,
  :OUTDENT => 14,
  :OPAREN => 15,
  :CPAREN => 16,
  :DOT => 17,
  :SIGNATURE => 18,
  :SYMBOL => 19,
  :NL => 20,
  :EOF => 21,
  :PIPE => 22,
  :COMMA => 23,
  :PERCENT => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "EQUAL",
  "PLUS",
  "MINUS",
  "ASTERISK",
  "FWD_SLASH",
  "COLON",
  "FLOAT",
  "INTEGER",
  "STRING",
  "EXPO",
  "INDENT",
  "OUTDENT",
  "OPAREN",
  "CPAREN",
  "DOT",
  "SIGNATURE",
  "SYMBOL",
  "NL",
  "EOF",
  "PIPE",
  "COMMA",
  "PERCENT",
  "$start",
  "statements",
  "statement",
  "expr",
  "eol",
  "callable",
  "binary_op",
  "method_call",
  "literal",
  "variable",
  "grouped_expr",
  "indented",
  "indented_w_stmts",
  "indented_w_expr",
  "indented_wo_stmts",
  "indent",
  "outdent",
  "indent_w_args",
  "indent_pipe",
  "indent_args",
  "indent_wo_args",
  "indent_arg",
  "method_call_on_object",
  "method_call_on_self",
  "call_signature",
  "call_arguments",
  "call_simple_name",
  "call_argument",
  "call_passed_arg",
  "assignment",
  "addition",
  "subtraction",
  "multiplication",
  "division",
  "exponentiation",
  "modulo",
  "integer",
  "float",
  "string",
  "symbol" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_2(val, _values, result)
     return scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_3(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_15(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_16(val, _values, result)
     return val[0].append(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_17(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_18(val, _values, result)
     return pop_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_19(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_20(val, _values, result)
     return push_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_21(val, _values, result)
     return push_scope 
    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_26(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_27(val, _values, result)
     val[0].value = val[2]; return val[0] 
    result
  end
.,.,

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_30(val, _values, result)
     return n :MethodCall, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_31(val, _values, result)
     return n :MethodCall, scope, val[0] 
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_34(val, _values, result)
     return n :CallSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_35(val, _values, result)
     return n :CallSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_39(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_40(val, _values, result)
     return n :Expression, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_41(val, _values, result)
     return scope.allocate val[0] 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_49(val, _values, result)
     return n :VarAssign, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_50(val, _values, result)
     return n :Addition, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_51(val, _values, result)
     return n :Subtraction, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_52(val, _values, result)
     return n :Multiplication, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_53(val, _values, result)
     return n :Division, val[0], val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_54(val, _values, result)
     return n :Exponentiation, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_55(val, _values, result)
     return n :Modulo, val[0], val[2] 
    result
  end
.,.,

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_60(val, _values, result)
     return n :Symbol,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_61(val, _values, result)
     return n :Float,   val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_62(val, _values, result)
     return n :Integer, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_63(val, _values, result)
     return n :String,  val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Huia
