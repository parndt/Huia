#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Huia
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 110)

attr_accessor :lexer, :state, :scopes

def initialize lexer
  @lexer  = lexer
  @state  = []
  @scopes = []
  push_scope
end

def ast
  @ast ||= do_parse
  @scopes.first
end

#def do_parse
#super
#rescue ParseError => e
#  raise SyntaxError, "#{e.message} on line #{@lexer.lineno}"
#end

#def on_error t, val, vstack
#  binding.pry
#end

def next_token
  nt = lexer.next_computed_token
  # just use a state stack for now, we'll have to do something
  # more sophisticated soon.
  if nt && nt.first == :state
    if nt.last
      state.push << nt.last
    else
      state.pop
    end
    next_token
  else
    nt
  end
end

def push_scope
  new_scope = Huia::AST::Scope.new scope
  scopes.push new_scope
  new_scope
end

def pop_scope
  scopes.pop
end

def scope
  scopes.last
end

def node type, *args
  Huia::AST.const_get(type).new(*args)
end
alias n node
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,    52,    21,    55,    18,    18,    47,    72,    52,    38,
    39,    40,    52,    47,    17,    20,    54,    47,    18,    37,
     5,     6,    21,    54,    41,    42,    43,    54,    17,    38,
    39,    40,    89,    47,    91,    20,    95,    96,    18,    37,
     5,     6,    21,    54,    41,    42,    43,    97,    17,    38,
    39,    40,    98,    63,    89,    20,   102,   nil,    18,    37,
   nil,   nil,    62,    21,    41,    42,    43,   nil,    17,   nil,
    38,    39,    40,   nil,   nil,    21,    20,   nil,   nil,    18,
    37,   nil,    38,    39,    40,    41,    42,    43,    20,    17,
   nil,    18,    37,   nil,   nil,    21,   nil,    41,    42,    43,
   nil,    17,    38,    39,    40,   nil,   nil,    21,    20,   nil,
   nil,    18,    37,   nil,    38,    39,    40,    41,    42,    43,
    20,    17,   nil,    18,    37,   nil,   nil,    21,   nil,    41,
    42,    43,   nil,    17,    38,    39,    40,   nil,   nil,    21,
    20,   nil,   nil,    18,    37,   nil,    38,    39,    40,    41,
    42,    43,    20,    17,   nil,    18,    37,   nil,   nil,    21,
   nil,    41,    42,    43,   nil,    17,    38,    39,    40,   nil,
   nil,    21,    20,   nil,   nil,    18,    37,   nil,    38,    39,
    40,    41,    42,    43,    20,    17,   nil,    18,    37,   nil,
   nil,    21,   nil,    41,    42,    43,   nil,    17,    38,    39,
    40,   nil,   nil,   nil,    20,   nil,   nil,    18,    37,   nil,
   nil,    21,   nil,    41,    42,    43,   nil,    17,    38,    39,
    40,   nil,   nil,    85,    20,   nil,   nil,    18,    37,     5,
     6,    21,   nil,    41,    42,    43,   nil,    17,    38,    39,
    40,   nil,   nil,    85,    20,   nil,   nil,    18,    37,     5,
     6,    21,   nil,    41,    42,    43,   nil,    17,    38,    39,
    40,   nil,   nil,   nil,    20,   nil,   nil,    18,    37,   nil,
   nil,   nil,   nil,    41,    42,    43,   nil,    17,    48,    49,
    50,    51,   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,
   nil,    47,   nil,   nil,     5,     6,    48,    49,    50,    51,
   nil,    54,   nil,    53,    52,    48,    49,    50,    51,    47,
   nil,   nil,    90,    52,   nil,   nil,   nil,    92,    47,    54,
   nil,    53,   nil,    48,    49,    50,    51,   nil,    54,   nil,
    53,    52,    48,    49,    50,    51,    47,   nil,    50,    51,
    52,   nil,   nil,   nil,    52,    47,    54,   nil,    53,    47,
    48,    49,    50,    51,   nil,    54,   nil,    53,    52,    54,
    85,    53,   nil,    47,   nil,   nil,     5,     6,    48,    49,
    50,    51,   nil,    54,   nil,    53,    52,    50,    51,   nil,
   nil,    47,   nil,    52,   nil,   nil,   nil,   nil,    47,   nil,
   nil,    54,   nil,    53,   nil,   nil,   nil,   nil,    54,   nil,
    53 ]

racc_action_check = [
     1,    76,     1,     8,    47,    15,    76,    44,    77,     1,
     1,     1,    79,    77,    47,     1,    76,    79,     1,     1,
     1,     1,     0,    77,     1,     1,     1,    79,     1,     0,
     0,     0,    61,    78,    70,     0,    86,    86,     0,     0,
     0,     0,    18,    78,     0,     0,     0,    88,     0,    18,
    18,    18,    95,    18,    96,    18,    99,   nil,    18,    18,
   nil,   nil,    18,    20,    18,    18,    18,   nil,    18,   nil,
    20,    20,    20,   nil,   nil,    48,    20,   nil,   nil,    20,
    20,   nil,    48,    48,    48,    20,    20,    20,    48,    20,
   nil,    48,    48,   nil,   nil,    49,   nil,    48,    48,    48,
   nil,    48,    49,    49,    49,   nil,   nil,    50,    49,   nil,
   nil,    49,    49,   nil,    50,    50,    50,    49,    49,    49,
    50,    49,   nil,    50,    50,   nil,   nil,    51,   nil,    50,
    50,    50,   nil,    50,    51,    51,    51,   nil,   nil,    52,
    51,   nil,   nil,    51,    51,   nil,    52,    52,    52,    51,
    51,    51,    52,    51,   nil,    52,    52,   nil,   nil,    53,
   nil,    52,    52,    52,   nil,    52,    53,    53,    53,   nil,
   nil,    54,    53,   nil,   nil,    53,    53,   nil,    54,    54,
    54,    53,    53,    53,    54,    53,   nil,    54,    54,   nil,
   nil,    55,   nil,    54,    54,    54,   nil,    54,    55,    55,
    55,   nil,   nil,   nil,    55,   nil,   nil,    55,    55,   nil,
   nil,    60,   nil,    55,    55,    55,   nil,    55,    60,    60,
    60,   nil,   nil,    60,    60,   nil,   nil,    60,    60,    60,
    60,    82,   nil,    60,    60,    60,   nil,    60,    82,    82,
    82,   nil,   nil,    82,    82,   nil,   nil,    82,    82,    82,
    82,    97,   nil,    82,    82,    82,   nil,    82,    97,    97,
    97,   nil,   nil,   nil,    97,   nil,   nil,    97,    97,   nil,
   nil,   nil,   nil,    97,    97,    97,   nil,    97,     3,     3,
     3,     3,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,
   nil,     3,   nil,   nil,     3,     3,    66,    66,    66,    66,
   nil,     3,   nil,     3,    66,    71,    71,    71,    71,    66,
   nil,   nil,    66,    71,   nil,   nil,   nil,    71,    71,    66,
   nil,    66,   nil,    80,    80,    80,    80,   nil,    71,   nil,
    71,    80,    81,    81,    81,    81,    80,   nil,    74,    74,
    81,   nil,   nil,   nil,    74,    81,    80,   nil,    80,    74,
    83,    83,    83,    83,   nil,    81,   nil,    81,    83,    74,
    83,    74,   nil,    83,   nil,   nil,    83,    83,   101,   101,
   101,   101,   nil,    83,   nil,    83,   101,    75,    75,   nil,
   nil,   101,   nil,    75,   nil,   nil,   nil,   nil,    75,   nil,
   nil,   101,   nil,   101,   nil,   nil,   nil,   nil,    75,   nil,
    75 ]

racc_action_pointer = [
    20,     0,   nil,   274,   nil,   nil,   nil,   nil,     0,   nil,
   nil,   nil,   nil,   nil,   nil,   -13,   nil,   nil,    40,   nil,
    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   nil,   -14,    73,    93,
   105,   125,   137,   157,   169,   189,   nil,   nil,   nil,   nil,
   209,    30,   nil,   nil,   nil,   nil,   292,   nil,   nil,   nil,
    14,   301,   nil,   nil,   332,   371,   -11,    -4,    16,     0,
   319,   328,   229,   346,   nil,   nil,    14,   nil,    44,   nil,
   nil,   nil,   nil,   nil,   nil,    32,    52,   249,   nil,    43,
   nil,   364,   nil ]

racc_action_default = [
   -80,   -80,    -1,    -4,    -5,    -6,    -7,   -10,   -11,   -12,
   -13,   -14,   -32,   -33,   -35,   -36,   -37,   -38,   -80,   -46,
   -80,   -49,   -50,   -51,   -52,   -53,   -54,   -55,   -56,   -57,
   -66,   -67,   -68,   -69,   -70,   -71,   -72,   -73,   -74,   -75,
   -76,   -77,   -78,   -79,   -80,    -2,    -3,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -47,   -15,   -16,   -17,
   -80,   -80,   -23,   -24,   -25,   -26,   -42,   -39,   -40,   -41,
   -44,   -80,   103,   -34,   -59,   -60,   -61,   -62,   -63,   -64,
   -65,   -58,   -80,    -4,   -20,   -21,   -80,   -27,   -29,   -31,
   -43,   -45,   -48,   -18,   -19,    -9,   -80,   -80,    -8,   -80,
   -28,   -30,   -22 ]

racc_goto_table = [
    45,    66,    46,    71,     1,    87,    84,    99,    70,    57,
    58,    59,    60,    64,    61,    86,    65,    73,    56,    67,
    68,    69,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,
   nil,    74,    75,    76,    77,    78,    79,    80,    81,   nil,
   100,   nil,   nil,    83,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    82,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   101,    45,    46 ]

racc_goto_check = [
     2,     3,     4,     3,     1,    21,    16,     5,    11,    12,
    13,    14,    15,    17,    18,    19,    20,    25,    28,    29,
    30,    31,   nil,   nil,   nil,   nil,   nil,   nil,    16,    16,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,   nil,
    21,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     2,     4 ]

racc_goto_pointer = [
   nil,     4,    -1,   -17,    -1,   -88,   nil,   nil,   nil,   nil,
   nil,   -10,    -9,    -8,    -7,    -6,   -54,    -5,    -4,   -46,
    -2,   -56,   nil,   nil,   nil,   -30,   nil,   nil,     3,     1,
     2,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,   nil,     7,     8,     9,    10,
    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    88,    12,    13,    14,    15,    16,    19,   nil,
   nil,   nil,    22,    23,    24,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    34,    35,    36 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 31, :_reduce_none,
  2, 31, :_reduce_2,
  2, 32, :_reduce_3,
  1, 32, :_reduce_4,
  1, 32, :_reduce_5,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 35, :_reduce_none,
  0, 35, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  3, 42, :_reduce_18,
  3, 43, :_reduce_19,
  2, 44, :_reduce_20,
  1, 46, :_reduce_21,
  5, 47, :_reduce_22,
  1, 48, :_reduce_23,
  1, 50, :_reduce_24,
  1, 45, :_reduce_none,
  1, 45, :_reduce_none,
  1, 49, :_reduce_none,
  3, 49, :_reduce_none,
  1, 51, :_reduce_29,
  3, 51, :_reduce_30,
  1, 52, :_reduce_31,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  3, 53, :_reduce_34,
  1, 54, :_reduce_35,
  1, 55, :_reduce_none,
  1, 55, :_reduce_none,
  1, 57, :_reduce_38,
  2, 58, :_reduce_39,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 60, :_reduce_none,
  2, 60, :_reduce_none,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  1, 56, :_reduce_46,
  2, 56, :_reduce_47,
  3, 38, :_reduce_48,
  1, 37, :_reduce_49,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  3, 62, :_reduce_58,
  3, 63, :_reduce_59,
  3, 64, :_reduce_60,
  3, 65, :_reduce_61,
  3, 66, :_reduce_62,
  3, 67, :_reduce_63,
  3, 68, :_reduce_64,
  3, 69, :_reduce_65,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 73, :_reduce_73,
  1, 71, :_reduce_74,
  1, 70, :_reduce_75,
  1, 72, :_reduce_76,
  1, 74, :_reduce_77,
  1, 75, :_reduce_78,
  1, 76, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 103

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :EQUAL => 3,
  :PLUS => 4,
  :MINUS => 5,
  :ASTERISK => 6,
  :FWD_SLASH => 7,
  :COLON => 8,
  :FLOAT => 9,
  :INTEGER => 10,
  :STRING => 11,
  :EXPO => 12,
  :INDENT => 13,
  :OUTDENT => 14,
  :OPAREN => 15,
  :CPAREN => 16,
  :DOT => 17,
  :SIGNATURE => 18,
  :SYMBOL => 19,
  :NL => 20,
  :EOF => 21,
  :PIPE => 22,
  :COMMA => 23,
  :NIL => 24,
  :TRUE => 25,
  :FALSE => 26,
  :EQUALITY => 27,
  :CALL => 28,
  :PERCENT => 29 }

racc_nt_base = 30

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "EQUAL",
  "PLUS",
  "MINUS",
  "ASTERISK",
  "FWD_SLASH",
  "COLON",
  "FLOAT",
  "INTEGER",
  "STRING",
  "EXPO",
  "INDENT",
  "OUTDENT",
  "OPAREN",
  "CPAREN",
  "DOT",
  "SIGNATURE",
  "SYMBOL",
  "NL",
  "EOF",
  "PIPE",
  "COMMA",
  "NIL",
  "TRUE",
  "FALSE",
  "EQUALITY",
  "CALL",
  "PERCENT",
  "$start",
  "statements",
  "statement",
  "expr",
  "eol",
  "nlq",
  "literal",
  "variable",
  "grouped_expr",
  "binary_op",
  "method_call",
  "indented",
  "indented_w_stmts",
  "indented_w_expr",
  "indented_wo_stmts",
  "indent",
  "outdent",
  "indent_w_args",
  "indent_pipe",
  "indent_args",
  "indent_wo_args",
  "indent_arg",
  "arg_var",
  "method_call_on_object",
  "method_call_on_self",
  "call_signature",
  "call_arguments",
  "call_simple_name",
  "call_argument",
  "call_passed_arg",
  "call_passed_simple",
  "call_passed_indented",
  "assignment",
  "addition",
  "subtraction",
  "multiplication",
  "division",
  "exponentiation",
  "modulo",
  "equality",
  "integer",
  "float",
  "string",
  "symbol",
  "nil",
  "true",
  "false" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_2(val, _values, result)
     return scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_3(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_4(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_5(val, _values, result)
     return scope 
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_18(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_19(val, _values, result)
     return val[0].append(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_20(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_21(val, _values, result)
     return pop_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_22(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_23(val, _values, result)
     return push_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_24(val, _values, result)
     return push_scope 
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_29(val, _values, result)
     return scope.add_argument val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_30(val, _values, result)
     val[0].value = val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_31(val, _values, result)
     return n :Variable, val[0] 
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_34(val, _values, result)
     return n :MethodCall, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_35(val, _values, result)
     return n :MethodCall, scope, val[0] 
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_38(val, _values, result)
     return n :CallSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_39(val, _values, result)
     return n :CallSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_46(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_47(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_48(val, _values, result)
     return n :Expression, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_49(val, _values, result)
     return scope.allocate val[0] 
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_58(val, _values, result)
     return n :VarAssign, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_59(val, _values, result)
     return n :Addition, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_60(val, _values, result)
     return n :Subtraction, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_61(val, _values, result)
     return n :Multiplication, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_62(val, _values, result)
     return n :Division, val[0], val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_63(val, _values, result)
     return n :Exponentiation, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_64(val, _values, result)
     return n :Modulo, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_65(val, _values, result)
     return n :Equality, val[0], val[2] 
    result
  end
.,.,

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_73(val, _values, result)
     return n :Symbol,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_74(val, _values, result)
     return n :Float,   val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_75(val, _values, result)
     return n :Integer, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_76(val, _values, result)
     return n :String,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_77(val, _values, result)
     return n :Nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_78(val, _values, result)
     return n :True 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_79(val, _values, result)
     return n :False 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Huia
