#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Huia
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 115)

attr_accessor :lexer, :state, :scopes

def initialize lexer
  @lexer  = lexer
  @state  = []
  @scopes = []
  push_scope
end

def ast
  @ast ||= do_parse
  @scopes.first
end

#def do_parse
#super
#rescue ParseError => e
#  raise SyntaxError, "#{e.message} on line #{@lexer.lineno}"
#end

#def on_error t, val, vstack
#  binding.pry
#end

def next_token
  nt = lexer.next_computed_token
  # just use a state stack for now, we'll have to do something
  # more sophisticated soon.
  if nt && nt.first == :state
    if nt.last
      state.push << nt.last
    else
      state.pop
    end
    next_token
  else
    nt
  end
end

def push_scope
  new_scope = Huia::AST::Scope.new scope
  new_scope.line = lexer.lineno
  scopes.push new_scope
  new_scope
end

def pop_scope
  scopes.pop
end

def scope
  scopes.last
end

def binary left, right, method
  node(:MethodCall, left, node(:CallSignature, method, [right]))
end

def node type, *args
  Huia::AST.const_get(type).new(*args).tap do |n|
    n.line = lexer.lineno
  end
end
alias n node

def allocate_local name
  v = node(:Variable, name)
  scope.allocate_local(v)
  v
end

def allocate_local_assignment name, value
  v = node(:Assignment, name, value)
  scope.allocate_local(v)
  v
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    48,    56,    23,    20,    20,    75,    51,    56,    56,    41,
    42,    43,    51,    51,    19,    22,    58,    76,    20,    40,
     5,     6,    58,    58,    44,    45,    46,    23,    19,    47,
    13,    51,    99,   100,    41,    42,    43,    92,    94,   101,
    22,    58,   102,    20,    40,     5,     6,    92,   106,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,    66,   nil,    22,   nil,   nil,    20,    40,
   nil,   nil,    65,   nil,    44,    45,    46,    23,    19,    47,
    13,   nil,   nil,   nil,    41,    42,    43,   nil,   nil,   nil,
    22,   nil,   nil,    20,    40,   nil,   nil,   nil,   nil,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,   nil,   nil,    22,   nil,   nil,    20,    40,
   nil,   nil,   nil,   nil,    44,    45,    46,    23,    19,    47,
    13,   nil,   nil,   nil,    41,    42,    43,   nil,   nil,   nil,
    22,   nil,   nil,    20,    40,   nil,   nil,   nil,   nil,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,   nil,   nil,    22,   nil,   nil,    20,    40,
   nil,   nil,   nil,   nil,    44,    45,    46,    23,    19,    47,
    13,   nil,   nil,   nil,    41,    42,    43,   nil,   nil,   nil,
    22,   nil,   nil,    20,    40,   nil,   nil,   nil,   nil,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,   nil,   nil,    22,   nil,   nil,    20,    40,
   nil,   nil,   nil,   nil,    44,    45,    46,    23,    19,    47,
    13,   nil,   nil,   nil,    41,    42,    43,   nil,   nil,   nil,
    22,   nil,   nil,    20,    40,   nil,   nil,   nil,   nil,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,   nil,   nil,    22,   nil,   nil,    20,    40,
   nil,   nil,   nil,   nil,    44,    45,    46,    23,    19,    47,
    13,   nil,   nil,   nil,    41,    42,    43,   nil,   nil,    88,
    22,   nil,   nil,    20,    40,     5,     6,   nil,   nil,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,   nil,   nil,    22,   nil,   nil,    20,    40,
   nil,   nil,   nil,   nil,    44,    45,    46,    23,    19,    47,
    13,   nil,   nil,   nil,    41,    42,    43,   nil,   nil,    88,
    22,   nil,   nil,    20,    40,     5,     6,   nil,   nil,    44,
    45,    46,    23,    19,    47,    13,   nil,   nil,   nil,    41,
    42,    43,   nil,   nil,   nil,    22,    54,    55,    20,    40,
   nil,   nil,    56,   nil,    44,    45,    46,    51,    19,    47,
    13,    52,    53,    54,    55,   nil,   nil,    58,   nil,    56,
   nil,    57,   nil,   nil,    51,   nil,   nil,     5,     6,    52,
    53,    54,    55,   nil,    58,   nil,   nil,    56,    57,   nil,
   nil,   nil,    51,   nil,   nil,    93,    52,    53,    54,    55,
   nil,   nil,    58,   nil,    56,   nil,    57,   nil,    95,    51,
   nil,   nil,    52,    53,    54,    55,   nil,   nil,   nil,    58,
    56,   nil,   nil,    57,   nil,    51,   nil,   nil,    52,    53,
    54,    55,   nil,   nil,   nil,    58,    56,   nil,    88,    57,
   nil,    51,   nil,   nil,     5,     6,    52,    53,    54,    55,
   nil,    58,   nil,   nil,    56,    57,   nil,   nil,   nil,    51,
   nil,   nil,    52,    53,    54,    55,    54,    55,   nil,    58,
    56,   nil,    56,    57,   nil,    51,   nil,    51,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    58,   nil,    58,   nil,    57,
   nil,    57 ]

racc_action_check = [
     1,    80,     1,    17,    51,    23,    80,    81,    83,     1,
     1,     1,    81,    83,    51,     1,    80,    48,     1,     1,
     1,     1,    81,    83,     1,     1,     1,     0,     1,     1,
     1,    82,    89,    89,     0,     0,     0,    64,    73,    91,
     0,    82,    99,     0,     0,     0,     0,   100,   103,     0,
     0,     0,    20,     0,     0,     0,   nil,   nil,   nil,    20,
    20,    20,   nil,    20,   nil,    20,   nil,   nil,    20,    20,
   nil,   nil,    20,   nil,    20,    20,    20,    22,    20,    20,
    20,   nil,   nil,   nil,    22,    22,    22,   nil,   nil,   nil,
    22,   nil,   nil,    22,    22,   nil,   nil,   nil,   nil,    22,
    22,    22,    52,    22,    22,    22,   nil,   nil,   nil,    52,
    52,    52,   nil,   nil,   nil,    52,   nil,   nil,    52,    52,
   nil,   nil,   nil,   nil,    52,    52,    52,    53,    52,    52,
    52,   nil,   nil,   nil,    53,    53,    53,   nil,   nil,   nil,
    53,   nil,   nil,    53,    53,   nil,   nil,   nil,   nil,    53,
    53,    53,    54,    53,    53,    53,   nil,   nil,   nil,    54,
    54,    54,   nil,   nil,   nil,    54,   nil,   nil,    54,    54,
   nil,   nil,   nil,   nil,    54,    54,    54,    55,    54,    54,
    54,   nil,   nil,   nil,    55,    55,    55,   nil,   nil,   nil,
    55,   nil,   nil,    55,    55,   nil,   nil,   nil,   nil,    55,
    55,    55,    56,    55,    55,    55,   nil,   nil,   nil,    56,
    56,    56,   nil,   nil,   nil,    56,   nil,   nil,    56,    56,
   nil,   nil,   nil,   nil,    56,    56,    56,    57,    56,    56,
    56,   nil,   nil,   nil,    57,    57,    57,   nil,   nil,   nil,
    57,   nil,   nil,    57,    57,   nil,   nil,   nil,   nil,    57,
    57,    57,    58,    57,    57,    57,   nil,   nil,   nil,    58,
    58,    58,   nil,   nil,   nil,    58,   nil,   nil,    58,    58,
   nil,   nil,   nil,   nil,    58,    58,    58,    63,    58,    58,
    58,   nil,   nil,   nil,    63,    63,    63,   nil,   nil,    63,
    63,   nil,   nil,    63,    63,    63,    63,   nil,   nil,    63,
    63,    63,    75,    63,    63,    63,   nil,   nil,   nil,    75,
    75,    75,   nil,   nil,   nil,    75,   nil,   nil,    75,    75,
   nil,   nil,   nil,   nil,    75,    75,    75,    85,    75,    75,
    75,   nil,   nil,   nil,    85,    85,    85,   nil,   nil,    85,
    85,   nil,   nil,    85,    85,    85,    85,   nil,   nil,    85,
    85,    85,   101,    85,    85,    85,   nil,   nil,   nil,   101,
   101,   101,   nil,   nil,   nil,   101,    78,    78,   101,   101,
   nil,   nil,    78,   nil,   101,   101,   101,    78,   101,   101,
   101,     3,     3,     3,     3,   nil,   nil,    78,   nil,     3,
   nil,    78,   nil,   nil,     3,   nil,   nil,     3,     3,    69,
    69,    69,    69,   nil,     3,   nil,   nil,    69,     3,   nil,
   nil,   nil,    69,   nil,   nil,    69,    74,    74,    74,    74,
   nil,   nil,    69,   nil,    74,   nil,    69,   nil,    74,    74,
   nil,   nil,    84,    84,    84,    84,   nil,   nil,   nil,    74,
    84,   nil,   nil,    74,   nil,    84,   nil,   nil,    86,    86,
    86,    86,   nil,   nil,   nil,    84,    86,   nil,    86,    84,
   nil,    86,   nil,   nil,    86,    86,    96,    96,    96,    96,
   nil,    86,   nil,   nil,    96,    86,   nil,   nil,   nil,    96,
   nil,   nil,   105,   105,   105,   105,    79,    79,   nil,    96,
   105,   nil,    79,    96,   nil,   105,   nil,    79,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   105,   nil,    79,   nil,   105,
   nil,    79 ]

racc_action_pointer = [
    25,     0,   nil,   377,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -15,   nil,   nil,
    50,   nil,    75,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,
   nil,   -14,   100,   125,   150,   175,   200,   225,   250,   nil,
   nil,   nil,   nil,   275,    35,   nil,   nil,   nil,   nil,   395,
   nil,   nil,   nil,    18,   412,   300,   nil,   nil,   360,   480,
   -11,    -5,    14,    -4,   428,   325,   444,   nil,   nil,    10,
   nil,    36,   nil,   nil,   nil,   nil,   462,   nil,   nil,    22,
    45,   350,   nil,    35,   nil,   478,   nil ]

racc_action_default = [
   -84,   -84,    -1,    -4,    -5,    -6,    -7,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -34,   -35,   -37,   -38,   -39,   -40,
   -84,   -48,   -84,   -51,   -52,   -53,   -54,   -55,   -56,   -57,
   -58,   -59,   -68,   -69,   -70,   -71,   -72,   -73,   -74,   -75,
   -76,   -77,   -78,   -79,   -80,   -81,   -82,   -83,   -84,    -2,
    -3,   -84,   -84,   -84,   -84,   -84,   -84,   -84,   -84,   -49,
   -17,   -18,   -19,   -84,   -84,   -25,   -26,   -27,   -28,   -44,
   -41,   -42,   -43,   -46,   -84,   -84,   107,   -36,   -61,   -62,
   -63,   -64,   -65,   -66,   -67,   -84,    -4,   -22,   -23,   -84,
   -29,   -31,   -33,   -45,   -47,   -50,   -60,   -20,   -21,    -9,
   -84,   -84,    -8,   -84,   -30,   -32,   -24 ]

racc_goto_table = [
    49,    69,    50,    74,     1,    90,    87,   103,    73,    60,
    61,    62,    63,    67,    64,    89,    68,    77,    59,    70,
    71,    72,   nil,   nil,   nil,   nil,   nil,   nil,    97,    98,
   nil,   nil,   nil,    78,    79,    80,    81,    82,    83,    84,
   nil,   104,   nil,   nil,    86,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    96,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    85,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   105,   nil,    49,    50 ]

racc_goto_check = [
     2,     3,     4,     3,     1,    22,    17,     5,    12,    13,
    14,    15,    16,    18,    19,    20,    21,    26,    29,    30,
    31,    32,   nil,   nil,   nil,   nil,   nil,   nil,    17,    17,
   nil,   nil,   nil,     3,     3,     3,     3,     3,     3,     3,
   nil,    22,   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,   nil,     2,     4 ]

racc_goto_pointer = [
   nil,     4,    -1,   -19,    -1,   -92,   nil,   nil,   nil,   nil,
   nil,   nil,   -12,   -11,   -10,    -9,    -8,   -57,    -7,    -6,
   -49,    -4,   -59,   nil,   nil,   nil,   -34,   nil,   nil,     1,
    -1,     0,     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,   nil,     7,     8,     9,    10,
    11,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    91,    14,    15,    16,    17,    18,    21,
   nil,   nil,   nil,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 33, :_reduce_none,
  2, 33, :_reduce_2,
  2, 34, :_reduce_3,
  1, 34, :_reduce_4,
  1, 34, :_reduce_5,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 37, :_reduce_none,
  0, 37, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 43, :_reduce_16,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  3, 45, :_reduce_20,
  3, 46, :_reduce_21,
  2, 47, :_reduce_22,
  1, 49, :_reduce_23,
  5, 50, :_reduce_24,
  1, 51, :_reduce_25,
  1, 53, :_reduce_26,
  1, 48, :_reduce_none,
  1, 48, :_reduce_none,
  1, 52, :_reduce_none,
  3, 52, :_reduce_none,
  1, 54, :_reduce_31,
  3, 54, :_reduce_32,
  1, 55, :_reduce_33,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  3, 56, :_reduce_36,
  1, 57, :_reduce_37,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 60, :_reduce_40,
  2, 61, :_reduce_41,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 63, :_reduce_none,
  2, 63, :_reduce_none,
  1, 64, :_reduce_none,
  2, 64, :_reduce_none,
  1, 59, :_reduce_48,
  2, 59, :_reduce_49,
  3, 40, :_reduce_50,
  1, 39, :_reduce_51,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  3, 65, :_reduce_60,
  3, 66, :_reduce_61,
  3, 67, :_reduce_62,
  3, 68, :_reduce_63,
  3, 69, :_reduce_64,
  3, 70, :_reduce_65,
  3, 71, :_reduce_66,
  3, 72, :_reduce_67,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 76, :_reduce_76,
  1, 74, :_reduce_77,
  1, 73, :_reduce_78,
  1, 75, :_reduce_79,
  1, 77, :_reduce_80,
  1, 78, :_reduce_81,
  1, 79, :_reduce_82,
  1, 80, :_reduce_83 ]

racc_reduce_n = 84

racc_shift_n = 107

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :EQUAL => 3,
  :PLUS => 4,
  :MINUS => 5,
  :ASTERISK => 6,
  :FWD_SLASH => 7,
  :COLON => 8,
  :FLOAT => 9,
  :INTEGER => 10,
  :STRING => 11,
  :EXPO => 12,
  :INDENT => 13,
  :OUTDENT => 14,
  :OPAREN => 15,
  :CPAREN => 16,
  :DOT => 17,
  :SIGNATURE => 18,
  :SYMBOL => 19,
  :NL => 20,
  :EOF => 21,
  :PIPE => 22,
  :COMMA => 23,
  :NIL => 24,
  :TRUE => 25,
  :FALSE => 26,
  :EQUALITY => 27,
  :CALL => 28,
  :SELF => 29,
  :CONSTANT => 30,
  :PERCENT => 31 }

racc_nt_base = 32

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "EQUAL",
  "PLUS",
  "MINUS",
  "ASTERISK",
  "FWD_SLASH",
  "COLON",
  "FLOAT",
  "INTEGER",
  "STRING",
  "EXPO",
  "INDENT",
  "OUTDENT",
  "OPAREN",
  "CPAREN",
  "DOT",
  "SIGNATURE",
  "SYMBOL",
  "NL",
  "EOF",
  "PIPE",
  "COMMA",
  "NIL",
  "TRUE",
  "FALSE",
  "EQUALITY",
  "CALL",
  "SELF",
  "CONSTANT",
  "PERCENT",
  "$start",
  "statements",
  "statement",
  "expr",
  "eol",
  "nlq",
  "literal",
  "variable",
  "grouped_expr",
  "binary_op",
  "method_call",
  "constant",
  "indented",
  "indented_w_stmts",
  "indented_w_expr",
  "indented_wo_stmts",
  "indent",
  "outdent",
  "indent_w_args",
  "indent_pipe",
  "indent_args",
  "indent_wo_args",
  "indent_arg",
  "arg_var",
  "method_call_on_object",
  "method_call_on_self",
  "call_signature",
  "call_arguments",
  "call_simple_name",
  "call_argument",
  "call_passed_arg",
  "call_passed_simple",
  "call_passed_indented",
  "assignment",
  "addition",
  "subtraction",
  "multiplication",
  "division",
  "exponentiation",
  "modulo",
  "equality",
  "integer",
  "float",
  "string",
  "symbol",
  "nil",
  "true",
  "false",
  "self" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_2(val, _values, result)
     return scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_3(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 17)
  def _reduce_4(val, _values, result)
     return scope.append val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_5(val, _values, result)
     return scope 
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_16(val, _values, result)
     return n :Constant, val[0] 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_20(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_21(val, _values, result)
     return val[0].append(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_22(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_23(val, _values, result)
     return pop_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_24(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_25(val, _values, result)
     return push_scope 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_26(val, _values, result)
     return push_scope 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_31(val, _values, result)
     return scope.add_argument val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_32(val, _values, result)
     val[0].value = val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_33(val, _values, result)
     return n :Variable, val[0] 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_36(val, _values, result)
     return n :MethodCall, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_37(val, _values, result)
     return n :MethodCall, scope, val[0] 
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_40(val, _values, result)
     return n :CallSignature, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_41(val, _values, result)
     return n :CallSignature, val[0], [val[1]] 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_48(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_49(val, _values, result)
     return val[0].concat_signature val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_50(val, _values, result)
     return n :Expression, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_51(val, _values, result)
     return allocate_local val[0] 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_60(val, _values, result)
     return allocate_local_assignment val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_61(val, _values, result)
     return binary val[0], val[2], 'add:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_62(val, _values, result)
     return binary val[0], val[2], 'subtract:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_63(val, _values, result)
     return binary val[0], val[2], 'multiplyBy:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_64(val, _values, result)
     return binary val[0], val[2], 'divideBy:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_65(val, _values, result)
     return binary val[0], val[2], 'toThePowerOf:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_66(val, _values, result)
     return binary val[0], val[2], 'moduloOf:' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_67(val, _values, result)
     return binary val[0], val[2], 'isEqualTo:' 
    result
  end
.,.,

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_76(val, _values, result)
     return n :Symbol,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_77(val, _values, result)
     return n :Float,   val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_78(val, _values, result)
     return n :Integer, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_79(val, _values, result)
     return n :String,  val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_80(val, _values, result)
     return n :Nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_81(val, _values, result)
     return n :True 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_82(val, _values, result)
     return n :False 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_83(val, _values, result)
     return n :Self 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Huia
