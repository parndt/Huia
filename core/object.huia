# These are the basic methods defined on Object.
# There are five magically defined in the runtime:
#
#   - `get:` retrieves an instance variable.
#   - `set:to:` sets an instance variable to a value.
#   - `defineMethod:as:` defines a methods on the receiver.
#   - `definePrivateMethod:as` defines a a private method on the receiver.
#   - `defaultResponderFor:` finds the requested method and returns it.
#   - `if:then:` executes the `then` if the `if` argument is truthy.
#
#   Note that you can override any of these methods in your subclass.

Object.defineMethod: 'sendMessage:withArgs:' as: |signature,arguments|
  method = defaultResponderFor: signature
  method.callWithArgs: arguments

Object.definePrivateMethod: 'if:then:else' as: |test,positive,negative|
  result  = nil
  wasTrue = false

  if: test then: |_result|
    result = _result
    positive.callWithArg: _result
    wasTrue = true

  if: wasTrue then:
    negative.callWithArg: _result

Object.definePrivateMethod: 'unless:then:' as: |test,positive|
  if: test then:
    nil
  else: |result|
    positive.callWithArg: result
